data:
  # resize dimensions to streamline model creation
  image_resize_dims:
    height: 256
    width: 256
  # ABSOLUTE path to data directory
  data_dir: /home/zeus/content/data/crim13
  # ABSOLUTE path to unlabeled videos' directory
  video_dir: /home/zeus/content/data/crim13/videos
  # location of labels; for example script, this should be relative to `data_dir`
  csv_file: CollectedData.csv
  # total number of body parts
  num_keypoints: 14
  keypoint_names:
    - black_mouse_nose
    - black_mouse_right_ear
    - black_mouse_left_ear
    - black_mouse_top_of_neck
    - black_mouse_right_rear_knee
    - black_mouse_left_rear_knee
    - black_mouse_base_of_tail
    - white_mouse_nose
    - white_mouse_right_ear
    - white_mouse_left_ear
    - white_mouse_top_of_neck
    - white_mouse_right_rear_knee
    - white_mouse_left_rear_knee
    - white_mouse_base_of_tail
  mirrored_column_matches: null
  columns_for_singleview_pca: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

training:
  # select from one of several predefined image/video augmentation pipelines
  # default- resizing only
  # dlc- imgaug pipeline implemented in DLC 2.0 package
  # dlc-top-down- curated subset of dlc augmentations with more conservative param settings
  imgaug: dlc
  # batch size of labeled data during training
  train_batch_size: 8
  # batch size of labeled data during validation
  val_batch_size: 48
  # batch size of labeled data during test
  test_batch_size: 48
  # fraction of labeled data used for training
  train_prob: 0.8
  # fraction of labeled data used for validation (remaining used for test)
  val_prob: 0.1
  # <=1 - fraction of total train frames (determined by `train_prob`) used for training
  # >1 - number of total train frames used for training
  train_frames: 1
  # number of gpus to train a single model
  num_gpus: 1
  # epochs over which to assess validation metrics for early stopping
  early_stop_patience: 3
  # epoch at which backbone network weights begin updating
  unfreezing_epoch: 20
  # dropout in final layers
  dropout_rate: 0.1
  # max training epochs; training may exit before due to early stopping
  min_epochs: 300
  max_epochs: 750
  # frequency to log training metrics (one step is one batch)
  log_every_n_steps: 10
  # frequency to log validation metrics
  check_val_every_n_epoch: 5
  # rng seed for labeled batches
  rng_seed_data_pt: 0
  # rng seed for weight initialization
  rng_seed_model_pt: 0
  # learning rate scheduler
  # multisteplr | [todo - reducelronplateau]
  lr_scheduler: multisteplr
  lr_scheduler_params:
    multisteplr:
      milestones: [150, 200, 250]
      gamma: 0.5

model:
  # list of unsupervised losses
  losses_to_use: []
  # backbone network
  backbone: resnet50_animal_ap10k
  # prediction mode: regression | heatmap | heatmap_mhcrnn (context)
  model_type: heatmap
  # which heatmap loss to use
  heatmap_loss_type: mse
  # directory name for model saving
  model_name: rebuttal23a

dali:
  base:
    train:
      sequence_length: 32 # step = sequence_length by default. done internally
    predict:
      # (train_batch_size + base.train.sequence_length) * 2 -> round down to nearest pow of 2
      sequence_length: 128 # step = sequence_length by default. done internally.
  context:
    train: # defaults: sequence_length=5, step=sequence_length
      batch_size: 16
    predict: # defaults: sequence_length=5, step=1
      sequence_length: 96

losses:
  # loss = projection onto the discarded eigenvectors
  pca_singleview:
    # weight in front of PCA loss
    log_weight: 5.0
    # predictions should lie within the low-d subspace spanned by components that describe this fraction of variance
    components_to_keep: 0.99
    # absolute error (in pixels) below which pca loss is zeroed out; if null, an empirical
    # epsilon is computed using the labeled data
    epsilon: null
  # loss = norm of distance between successive timepoints
  temporal:
    # weight in front of temporal loss
    log_weight: 5.0
    # for epsilon insensitive rectification
    # (in pixels; diffs below this are not penalized)
    epsilon: 20.0
    # nan removal value.
    # (in prob; heatmaps with max prob values are removed)
    prob_threshold: 0.05

eval:
  # paths to the hydra config files in the output folder, OR absolute paths to such folders.
  hydra_paths: [" "]
  # predict?
  predict_vids_after_training: true
  # save .mp4?
  save_vids_after_training: false
  fiftyone:
    # will be the name of the dataset (Mongo DB) created by FiftyOne. for video dataset, we will append dataset_name + "_video"
    dataset_name: crim13
    # if you want to manually provide a different model name to be displayed in FiftyOne
    model_display_names: ["test_model"]
    # whether to launch the app from the script (True), or from ipython (and have finer control over the outputs)
    launch_app_from_script: false

    remote: true # for LAI, must be False
    address: 127.0.0.1 # ip to launch the app on.
    port: 5151 # port to launch the app on.

  # str with an absolute path to a directory containing videos for prediction.
  # (it's not absolute just for the toy example)
  test_videos_directory: /home/zeus/content/data/crim13/videos
  # confidence threshold for plotting a vid
  confidence_thresh_for_vid: 0.90

callbacks:
  anneal_weight:
    attr_name: total_unsupervised_importance
    init_val: 0.0
    increase_factor: 0.01
    final_val: 1.0
    freeze_until_epoch: 0
